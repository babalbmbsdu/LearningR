---
title: "Reproducible document"
author: "Barath Balarasa"
format: html
---

## Basics of R

```{r}
1 + 1
```


## Setup code chunk

```{r setup}
#| message: false
#| warning: false
library(tidyverse)
post_meal_data <-
  read_csv2(here::here("data/post-meal-insulin.csv"))

small_post_meal_data <- select(post_meal_data, id, Age, BMI, Group, auc_pg, auc_ins, glykemi)

tidier_post_meal_data <- small_post_meal_data |>
  rename(
    auc_glucose = auc_pg,
    auc_insulin = auc_ins
  ) |>
  filter(glykemi == 0) |>
  select(-glykemi)

tidied_post_meal_data <- tidier_post_meal_data |>
  mutate(
    insulin_glucose_ratio = auc_insulin / auc_glucose,
    Group = if_else(Group == "CTR", "Control", "First-degree relative")
  )
```

## Showing the data

```{r}
post_meal_data
```


```{r}
glimpse(post_meal_data)
```

```{r}
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```

```{r}
#| fig-cap: "Distribution of BMI"
#| label: fig-BMI-histogram
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```
@fig-BMI-histogram

## Exercise: discrete plots

```{r}
#| fig-cap: "Dist. of Group"
#| label: fig-Group
ggplot(post_meal_data, aes(x = Group)) +
  geom_bar()
```

See @fig-Group above for a cool plot!


```{r}
#| fig-cap: "Dist. of Glykemi"
#| label: fig-gly
ggplot(post_meal_data, aes(x = glykemi)) +
  geom_bar(fill = "#00BE0067", color = "darkred")
```

See @fig-gly above for a cool plot!

```{r}
post_meal_data |>
  ggplot(aes(x = Group, fill = glykemi)) +
  geom_bar()
```

```{r}
post_meal_data |>
  #| fig-cap: "Glykemi Group"
  ggplot(aes(x = Group, fill = as.character(glykemi))) +
  geom_bar()
```

```{r}
post_meal_data |>
  #| fig-cap: "Glykemi Group extended"
  ggplot(aes(x = Group, fill = as.character(glykemi))) +
  geom_bar(position = position_dodge())
```

```{r}
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```

```{r}
ggplot(post_meal_data, aes(x = glykemi)) +
  geom_bar()
```

```{r side-by-side-figs}
#| label: fig-bmi-glykemi
#| fig-cap: "BMI and Glycemia, side-by-side"
#| fig-subcap:
#| - "Distribution of BMI"
#| - "Number of those with glycemia"
#| - "Number of those with glycemia with cool colors"
#| layout-ncol: 3

ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()

ggplot(post_meal_data, aes(x = glykemi)) +
  geom_bar()

ggplot(post_meal_data, aes(x = glykemi)) +
  geom_bar(fill = "#00BE0067", color = "darkred")
```

## Plotting

```{r}
#| fig-cap: "Scatterplot showing BMI against AUC of bloody glucose"
#| label: fig-bmi-auc_pg
ggplot(post_meal_data, aes(x = BMI, y = auc_pg)) +
  geom_point()
```



```{r}
#| fig-cap: "Scatterplot showing BMI against AUC of bloody glucose - smooth"
#| label: fig-bmi-auc_pg-smooth
ggplot(post_meal_data, aes(x = BMI, y = auc_pg)) +
  geom_point(color = "purple") +
  geom_smooth(fill = "#00BE0067", color = "darkred")
```


## Pushing changes to remote


## Pulling files locally


## Selecting data
```{r}
select(post_meal_data, Age)

select(post_meal_data, Age, BMI, Weight)

select(post_meal_data, -Group, -Age)

select(post_meal_data, starts_with("PG"))

select(post_meal_data, ends_with("OGTT"))

select(post_meal_data, contains("mass"))
```


## Renaming specific columns
```{r}
small_post_meal_data |>
  rename(auc_glucose = auc_pg)

small_post_meal_data |>
  rename(
    auc_glucose = auc_pg,
    auc_insulin = auc_ins
  )
```

## Select and rename tasks

# Task 1.
```{r}
post_meal_data |>
  select(contains("OGTT"))
```



# Task 2.

```{r}
post_meal_data |>
  select(contains(".."), -contains("...")) |>
  rename(
    P.glucose.minus5.OGGT = P.Glucose..5.OGTT,
    Insulin.minus5.OGTT.X = Insulin..5.OGTT.X
  )
```

# Task 3.
basic_info <- select(post_meal_data, id, BMI, Length, Weight, Age)
rename(basic_info, Height = Length)

post_meal_data|>
  select(post_meal_data, id, BMI, Length, Weight, Age) |>
  rename(basic_info, Height = Length)



## Filtering data by row

```{r}
small_post_meal_data |>
  filter(glykemi == 1)

small_post_meal_data |>
  filter(BMI >= 25)

small_post_meal_data |>
  filter(Group == "CTR")
```

Only 4 people have hypoglycemia
7 people have a BMI greater than 25
7 people are in the CTR group 

```{r}
small_post_meal_data |>
  filter(Group == "CTR", BMI >= 25)

small_post_meal_data |>
  filter(Group == "CTR" | BMI >= 25)
```

11 people in the group CTR have a BMI higher than 11
23 people have a BMI greater than 25 or they are in the CTR Group

## Modify or column

```{r}
tidier_post_meal_data |>
  mutate(
    insulin_glucose_ratio = auc_insulin / auc_glucose,
    Group = if_else(Group == "CTR", "Control", "First_Degree_Relative")
  )
```


## Practice with filter and mutate

```{r}
# Task 1.
post_meal_data |>
  filter(BMI >= 20 & BMI <= 40 & Group == "FDR")

# Task 2.
post_meal_data |>
  mutate(
    percent_body_fat = (Fat.mass.DXA / Weight) * 100
  ) |>
  filter(percent_body_fat > 30)
```
Task A -> **16** *persons*

Task B -> **10** *persons*

## Visualizing with jitter plot

```{r}
tidied_post_meal_data |>
  mutate(Overweight = if_else(BMI >= 25, "Overweight", "Not overweight")) |>
  ggplot(aes(x = Overweight, y = insulin_glucose_ratio)) +
  geom_jitter(color = "blue")
```

## Plotting three or more variables

```{r dotplot}
tidied_post_meal_data |>
  filter(BMI < 30) |>
  ggplot(aes(x = Age, y = auc_insulin, colour = Group)) +
  geom_point()
```


```{r old young dotplot - cols}
tidied_post_meal_data |>
  filter(BMI < 30) |>
  mutate(Young = if_else(Age < 40, "Young", "Old")) |>
  ggplot(aes(x = BMI, y = insulin_glucose_ratio, colour = Group)) +
  geom_point() +
  facet_grid(cols = vars(Young))
```


```{r old young dotplot - rows}
tidied_post_meal_data |>
  filter(BMI < 30) |>
  mutate(Young = if_else(Age < 40, "Young", "Old")) |>
  ggplot(aes(x = BMI, y = insulin_glucose_ratio, colour = Group)) +
  geom_point() +
  facet_grid(rows = vars(Young)) +
  labs(
    x = "Body Mass Index (BMI)",
    y = "Insulin to glucoise ratio"
  )
```



## Make multi-dimensional plots!

```{r}
#| label: fig-multidimensional
#| fig-cap: "Two, mult-dimensional plots of our data."
#| fig-subcap:
#|   - "Distribution of percent body fat by group and age category."
#|   - "Relationship between BMI and bone mineral density, split by insulin sensitivity."
#| layout-ncol: 2
# Task 1.
post_meal_data |>
  mutate(
    percent_body_fat = (Fat.mass.DXA / Weight) * 100,
    young = if_else(Age < 40, "Old", "Young")
  ) |>
  ggplot(aes(x = Group, y = percent_body_fat, colour = young)) +
  geom_jitter(width = 0.2) +
  labs(
    x = "Group",
    y = "Body fat percentage"
  )

# Task 2.
post_meal_data |>
  mutate(
    insulin_glucose_ratio = (auc_ins / auc_pg),
    insulin_insensitive = if_else(insulin_glucose_ratio > mean(insulin_glucose_ratio), "Insensitive", "Sensitive")
  ) |>
  ggplot(aes(x = BMI, y = Bone.mineral.DXA, colour = insulin_insensitive)) +
  geom_point() +
  geom_smooth() +
  facet_grid(cols = vars(insulin_insensitive)) +
  labs(
    x = "Body Mass Index (BMI)",
    y = "Bone mineral DXA"
  )
```


## Changing colours

```{r}
# Tasks 1. and 2.
#| fig-cap: " side-by-side"
#| fig-subcap:
#| - "Hypoerglycemia"
#| - "Insulin"
#| layout-ncol: 2
post_meal_data |>
  mutate(hyperglycemia = if_else(glykemi == 1, "Yes", "No")) |>
  ggplot(aes(x = Group, fill = hyperglycemia)) +
  geom_bar(position = position_dodge()) +
  scale_fill_viridis_d(option = "cividis")

# Tasks 3. and 4.
post_meal_data |>
  ggplot(aes(x = auc_pg, y = auc_ins, colour = BMI)) +
  geom_point() +
  scale_colour_viridis_c(option = "inferno")
```


## Calculating summary statistics

```{r Summarise}
tidied_post_meal_data |>
  summarise(
    max_BMI = max(BMI),
    min_BMI = min(BMI)
  )
```

## Summariuse with splitting

```{r}
#| label: tbl-mean-age-bmi
#| tbl-cap: "Mean values of Age and BMI for each group."
tidied_post_meal_data |>
  group_by(Group) |>
  summarise(
    "Mean Age (yrs)" = round(mean(Age), 1),
    "Mean BMI (kg/m^2)" = round(mean(BMI), 1)
  ) |>
  ungroup() |>
  knitr::kable()
```

See @tbl-mean-age-bmi


## About me

- Barath Balarasa
- University of Sourthern Denmark

im **a** *student*

## Simple code

```{r}
3 * 3
```

## Testing for Git

itÂ´s cold outside
